package tablasfinanzas;

//package flujos;

import java.awt.Toolkit;

import javax.swing.JOptionPane;



/**
 *
 * @author Allen
 */
public class tablaFlujos extends javax.swing.JFrame {
    double capital,interes,BC,tri,numero1,inversion=0,impuesto;
    int ndecimales,eleccion,periodos;
    int periodos1=0;
    double VAN=0;
    String empresa;
    public tablaFlujos() {
        super("Tabla Flujo de Caja");
        initComponents();
        
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/icon.png")));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtEmp = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        MCO = new javax.swing.JTextField();
        MImpuesto = new javax.swing.JTextField();
        txtVAN = new javax.swing.JLabel();
        txtTIR = new javax.swing.JLabel();
        txtBC = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtPRI = new javax.swing.JLabel();
        Ingresar = new javax.swing.JButton();
        txtLimpiar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        MVan1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        MBC = new javax.swing.JTextField();
        APri = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtDecimales = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();
        btnRegresar = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        txtTipoperiodo = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Periodos", "Beneficios", "Inversion", "Costos", "Depreciación", "C. Total", "F.C. Neto", "Impuesto", "Depreciacion", "F.C. Economico", "Prestamo", "Interes Prest.", "Amort. Prest", "F.C. Financiero"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, false, true, false, true, false, false, false, true, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 316, 1049, 200));
        getContentPane().add(txtEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 90, 444, 27));

        jLabel9.setText("Datos");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 80, -1));

        jLabel10.setText("Tasa C.O.");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        jLabel11.setText("Tasa de Impuestos");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 140, -1, -1));

        MCO.setEditable(false);
        MCO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MCOActionPerformed(evt);
            }
        });
        getContentPane().add(MCO, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 88, -1));

        MImpuesto.setEditable(false);
        MImpuesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MImpuestoActionPerformed(evt);
            }
        });
        getContentPane().add(MImpuesto, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 140, 88, -1));
        getContentPane().add(txtVAN, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 560, 667, 24));
        getContentPane().add(txtTIR, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 590, 667, 24));
        getContentPane().add(txtBC, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 630, 667, 24));

        jLabel8.setText("Resultados");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 530, -1, -1));
        getContentPane().add(txtPRI, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 670, 667, 24));

        Ingresar.setBackground(new java.awt.Color(239, 239, 239));
        Ingresar.setForeground(new java.awt.Color(255, 252, 252));
        Ingresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/botont1.png"))); // NOI18N
        Ingresar.setText("Ingresar Dato");
        Ingresar.setBorderPainted(false);
        Ingresar.setContentAreaFilled(false);
        Ingresar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Ingresar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/botont1.png"))); // NOI18N
        Ingresar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/botont2.png"))); // NOI18N
        Ingresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IngresarActionPerformed(evt);
            }
        });
        getContentPane().add(Ingresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 100, 150, 32));

        txtLimpiar.setBackground(new java.awt.Color(239, 239, 239));
        txtLimpiar.setForeground(new java.awt.Color(255, 252, 252));
        txtLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/botont1.png"))); // NOI18N
        txtLimpiar.setText("Limpiar");
        txtLimpiar.setBorderPainted(false);
        txtLimpiar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        txtLimpiar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/botont1.png"))); // NOI18N
        txtLimpiar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/botont2.png"))); // NOI18N
        txtLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLimpiarActionPerformed(evt);
            }
        });
        getContentPane().add(txtLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 150, 90, 32));

        jLabel6.setText("Indicadores");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 80, -1));

        jLabel5.setText("%");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 210, -1, -1));

        jTextField2.setEditable(false);
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 210, 189, -1));

        jLabel2.setText("TIR");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 210, 20, 20));

        MVan1.setEditable(false);
        getContentPane().add(MVan1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 210, 88, 24));

        jLabel1.setText("VAN");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 210, -1, 20));

        jLabel4.setText("B/C");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, -1, -1));

        MBC.setEditable(false);
        getContentPane().add(MBC, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 250, 116, -1));

        APri.setEditable(false);
        getContentPane().add(APri, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 250, 280, -1));

        jLabel3.setText("PRI");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 250, -1, -1));

        jLabel7.setText("N° de decimales:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 270, -1, -1));

        txtDecimales.setModel(new javax.swing.SpinnerNumberModel(2, 0, 6, 1));
        txtDecimales.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                txtDecimalesStateChanged(evt);
            }
        });
        getContentPane().add(txtDecimales, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 260, -1, 30));

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 252, 252));
        jLabel13.setText("Tabla de Flujos");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, 150, 40));

        btnRegresar.setBackground(new java.awt.Color(239, 239, 239));
        btnRegresar.setForeground(new java.awt.Color(255, 252, 252));
        btnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/botont1.png"))); // NOI18N
        btnRegresar.setText("Regresar");
        btnRegresar.setBorderPainted(false);
        btnRegresar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRegresar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/botont1.png"))); // NOI18N
        btnRegresar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/botont2.png"))); // NOI18N
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        getContentPane().add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 200, 90, 32));

        jLabel14.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 252, 252));
        jLabel14.setText("x");
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 10, 20, 20));
        getContentPane().add(txtTipoperiodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 420, 20));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Tablaf.png"))); // NOI18N
        jLabel12.setText("jLabel7");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1061, 706));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void IngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IngresarActionPerformed
        
        ndecimales = (Integer)txtDecimales.getValue();
        
        try{
            añadir();  
            txtEmp.setText("Flujo de caja de la empresa "+empresa);
     
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Hubo algun dato mal escrito, intentelo de nuevo");
            limpiartabla();
        }
        //txtMCO.setText(interes);
        //txtMImpuesto.setText(impuesto);
        
        if (Double.parseDouble(MBC.getText())<1){
            txtBC.setText("Segun la relacion b/c los Costos son mayores que los Beneficios");
        }else if (Double.parseDouble(MBC.getText())==1){
            txtBC.setText("Segun la relacion b/c los Costos y los Beneficios son iguales");
        }else{
           txtBC.setText("Segun la relacion b/c los Beneficios son mayores que los Costos"); 
        }
         if (Double.parseDouble(MCO.getText())<0){
             txtVAN.setText("Segun el VAN  el proyecto no es rentable");
        }else if (Double.parseDouble(MCO.getText())==0){
            txtVAN.setText("Segun el VAN el proyecto recuperara la inversion que se hizo");
        }else{
          txtVAN.setText("Segun el VAN el proyecto es rentable");
        }
      
  if(Double.parseDouble(jTextField2.getText())<interes){
            txtTIR.setText("Segun la TIR se sugiere no invertir en el proyecto");
        }else if(Double.parseDouble(jTextField2.getText())==interes){
            txtTIR.setText("Segun la TIR se sugiere verificar los otros indicadores");
        }else{
          txtTIR.setText("Segun la TIR se sugiere invertir en el proyecto");
        }
  

    }//GEN-LAST:event_IngresarActionPerformed

    private void txtLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLimpiarActionPerformed
        limpiartabla();
    }//GEN-LAST:event_txtLimpiarActionPerformed

    private void txtDecimalesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_txtDecimalesStateChanged
         
        ndecimales = (Integer)txtDecimales.getValue();
        MVan1.setText(""+decimales(VAN));
        MBC.setText(""+decimales(BC));
        jTextField2.setText(""+decimales(((tri+numero1)*100)));
    }//GEN-LAST:event_txtDecimalesStateChanged

    private void MCOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MCOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MCOActionPerformed

    private void MImpuestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MImpuestoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MImpuestoActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        menuprincipal menup = new menuprincipal();
        menup.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel14MouseClicked
    
    
   public double redondearDecimales(double n){
        double numero;
        numero = (double)Math.round(n * 100d) / 100d;
        return numero;
    }
   
   public double decimales(double n){
        double numero=0;
    switch(ndecimales) {
        case 0:
        numero = (double)Math.round(n) ;
        break;
        case 1:
        numero = (double)Math.round(n * 10d) / 10d;
        break;
        case 2:
        numero = (double)Math.round(n * 100d) / 100d;
        break;
        case 3:
        numero = (double)Math.round(n * 1000d) / 1000d;
        break;
        case 4:
        numero = (double)Math.round(n * 10000d) / 10000d;
        break;
        case 5:
        numero = (double)Math.round(n * 100000d) / 100000d;
        break;
        case 6:
            numero = (double)Math.round(n * 1000000d) / 1000000d;
        break;
        }  
        return numero;
    }
    
    public void limpiartabla(){
        MCO.setText(null);
       jTextField2.setText(null);
        MBC.setText(null);
        APri.setText(null);
        txtBC.setText(null);
        txtVAN.setText(null);
        MCO.setText(null);
        MImpuesto.setText(null);
        txtTIR.setText(null);
        txtEmp.setText(null);
         jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {
                "Periodos", "Beneficios", "Inversion", "Costos", "Depreciación", "CostoFinal", "F.C. Neto", "Impuesto", "Depreciacion", "F.C. Economico", "Prestamo", "Interes Prest.", "Amort. Prest", "F.C. Financiero"
            }
        ));
    }
    
    public void añadir(){
        int periodos=0;
        double beneficio=0,costo=0,depreciacion=0;
        empresa=JOptionPane.showInputDialog(null,"Ingrese el nombre de la empresa: ","Nombre de la empresa",JOptionPane.QUESTION_MESSAGE);
            for(int i=0;i<5;i++){
                switch(i){
                    case 0:
                        periodos=Integer.parseInt(JOptionPane.showInputDialog(null,"Ingrese el numero de Periodos: ","Periodos",JOptionPane.QUESTION_MESSAGE));
                        if(periodos<=0){
                            JOptionPane.showMessageDialog(null,"El numero de periodos debe ser mayor a 0");
                            i--;
                        }
                        break;
                    case 1:
                        inversion=Double.parseDouble(JOptionPane.showInputDialog(null,"Ingrese la inversion en el periodo 0: ","Inversion",JOptionPane.QUESTION_MESSAGE));
                        if(inversion<=0){
                            JOptionPane.showMessageDialog(null,"La inversion debe ser mayor a 0");
                            i--;
                        }
                        break;
                    case 2:
                        impuesto=Double.parseDouble(JOptionPane.showInputDialog(null,"Ingrese la tasa para los impuestos en porcentaje: ","costo",JOptionPane.QUESTION_MESSAGE));
                        if(impuesto<=0){
                            JOptionPane.showMessageDialog(null,"La tasa de impuestos debe ser mayor a 0");
                            i--;
                        }
                        break;
                    case 3:
                        interes=Double.parseDouble(JOptionPane.showInputDialog(null,"Tasa de Oportunidad en porcentaje ","Interes",JOptionPane.QUESTION_MESSAGE));
                        if(interes<=0){
                            JOptionPane.showMessageDialog(null,"La tasa de oportunidad debe ser mayor a 0");
                            i--;
                        }
                        break;
                    case 4:
                        capital=Double.parseDouble(JOptionPane.showInputDialog(null,"Capital de financiamiento: ","Prestamo",JOptionPane.QUESTION_MESSAGE));
                        if(capital<0){
                            JOptionPane.showMessageDialog(null,"La tasa de oportunidad debe ser mayor a 0");
                            i--;
                        }
                        break;
                }    
            }
        
        double impuestoM=impuesto/100;
        double interesM=interes/100;
        
        double tasa=0,tasam=0,formu=0;
       
        
        
        if(capital>0){
            tasa=Double.parseDouble(JOptionPane.showInputDialog(null,"Tasa del financiamiento: ","Prestamo",JOptionPane.QUESTION_MESSAGE));
            periodos1=Integer.parseInt(JOptionPane.showInputDialog(null,"Selecciones el numero de periodos de financiamiento","Periodos de Financiamiento",JOptionPane.QUESTION_MESSAGE));
            eleccion=Integer.parseInt(JOptionPane.showInputDialog(null,"Selecciones tipo de tasa \n1(mensual),2(bimestral),3(trimestral),4(semestral),5(anual)","Prestamo",JOptionPane.QUESTION_MESSAGE));
        
            switch (eleccion) {
            case 1:
                tasam = (Math.pow((1+tasa/100),((1.0)/(12.0)))-1);
                formu = Math.pow((1+tasam), (double)periodos1);
                txtTipoperiodo.setText("El financiamiento esta en periodos mensuales");
                break;
            case 2:
                tasam = (Math.pow((1+tasa/100),((1.0)/(6.0)))-1);
                formu = Math.pow((1+tasam), (double)periodos1);
                txtTipoperiodo.setText("El financiamiento esta en periodos bimestrales");
                break;
            case 3:
                tasam = (Math.pow((1+tasa/100),((1.0)/(4.0)))-1);
                formu = Math.pow((1+tasam), (double)periodos1);
                txtTipoperiodo.setText("El financiamiento esta en periodos trimestrales");
                break;
            case 4:
                tasam = (Math.pow((1+tasa/100),((1.0)/(2.0)))-1);
                formu = Math.pow((1+tasam), (double)periodos1);
                  txtTipoperiodo.setText("El financiamiento esta en periodos semestrales");
                break;
            case 5:
                tasam = (Math.pow((1+tasa/100),((1.0)/(1.0)))-1);
                formu = Math.pow((1+tasam), (double)periodos1);
                txtTipoperiodo.setText("El financiamiento esta en periodos anuales");
                break;
            default:
                txtTipoperiodo.setText("El flujo de caja esta en periodos anuales");
                break;
            }
        }else{
            tasa=0;
            periodos1=0;
            formu = 1;
            txtTipoperiodo.setText("El flujo de caja esta en periodos anuales");
        }
        double cuota; 
        
        if (formu==1) {
            cuota=0;
        } else {
            cuota=capital*((formu*tasam)/(formu-1));
        }
        
        double amortizacion=0,interesTasa=0;
        
        double sumaB=0,sumaC=0;
        
        String Matriz[][]=new String[periodos+1][14];
        double numeros[]=new double[periodos+1];
        double beneficios[]=new double[periodos+1];
        double costos[]=new double[periodos+1];
            Matriz[0][0]=("0");
            Matriz[0][1]=("");
            Matriz[0][2]=("S/ "+decimales(inversion));
            Matriz[0][3]=("");
            Matriz[0][4]=("");
            Matriz[0][5]=("");
            Matriz[0][6]=("");
            Matriz[0][7]=("");
            Matriz[0][8]=("");
            Matriz[0][9]=("");
            Matriz[0][10]=("S/ " + decimales(capital));
            Matriz[0][11]=("");
            Matriz[0][12]=("");
            Matriz[0][13]=("S/ " + decimales(capital-inversion));
            numeros[0]=capital-inversion;
            beneficios[0]=capital;
            costos[0]=inversion;
        
        for (int i=1; i<(periodos+1);i++){
            for(int j=0;j<4;j++){
                switch(j){
                    case 0:
                        beneficio=Double.parseDouble(JOptionPane.showInputDialog(null,"Ingrese el beneficio del periodo "+ i+":","inversion",JOptionPane.QUESTION_MESSAGE));
                        if(beneficio<0){
                            JOptionPane.showMessageDialog(null,"El beneficio debe ser mayor a 0");
                            j--;
                        }
                        break;
                    case 1:
                        costo=Double.parseDouble(JOptionPane.showInputDialog(null,"Ingrese los costos sin incluir la depreciacion del periodo "+ i+":","costo",JOptionPane.QUESTION_MESSAGE));
                        if(costo<0){
                            JOptionPane.showMessageDialog(null,"El costo debe ser mayor a 0");
                            j--;
                        }
                        break;
                    case 2:
                        depreciacion=Double.parseDouble(JOptionPane.showInputDialog(null,"Ingrese la depreciacion del periodo "+ i+":","depreciacion",JOptionPane.QUESTION_MESSAGE));
                        if(interes<=0){
                            JOptionPane.showMessageDialog(null,"La depreciacion debe ser mayor a 0");
                            j--;
                        }
                        break;
                    case 3:
                        inversion=Double.parseDouble(JOptionPane.showInputDialog(null,"Ingrese la inversion del periodo "+i+":","inversion",JOptionPane.QUESTION_MESSAGE));
                        if(impuesto<=0){
                            JOptionPane.showMessageDialog(null,"La inversion debe ser mayor a 0");
                            j--;
                        }
                        break;
                    
                }
            }
                
            double costoF=costo+depreciacion;
            double FFN=beneficio-costoF-inversion;
            double impF=(beneficio-costoF-inversion)*impuestoM;
            double fluC=(beneficio-costoF-inversion-impF+depreciacion);            
            interesTasa=capital*tasam;
            amortizacion=cuota-interesTasa;
            double fluF=(fluC-interesTasa-amortizacion);
        
            numeros[(i)]=fluF;
            Matriz[i][0]=(""+(i));
            Matriz[i][1]=("S/ "+decimales(beneficio));
            Matriz[i][2]=("S/ "+decimales(inversion));
            Matriz[i][3]=("S/ "+decimales(costo));
            Matriz[i][4]=("S/ "+decimales(depreciacion));
            Matriz[i][5]=("S/ "+decimales(costoF));
            Matriz[i][6]=("S/ "+decimales(FFN));
            Matriz[i][7]=("S/ "+decimales(impF));
            Matriz[i][8]=("S/ "+decimales(depreciacion));
            Matriz[i][9]=("S/ "+decimales(fluC));
            Matriz[i][10]=("");
            Matriz[i][11]=("S/ "+decimales(interesTasa));
            Matriz[i][12]=("S/ "+decimales(amortizacion));
            Matriz[i][13]=("S/ "+decimales(fluF));
            
            capital = capital - amortizacion;
            //beneficios y costos
            beneficios[i]=beneficio + depreciacion;
            costos[i]=inversion+costoF+impF+interesTasa+amortizacion;
        }
        //para la tasa de oportunidad y los impuestos
        MCO.setText(""+interes);
        MImpuesto.setText(""+impuesto);
        //para el VAN
        for(int i=0;i<(periodos+1);i++){
            VAN=(numeros[i]/(Math.pow((1+interesM),(i))))+VAN;
        }
        MVan1.setText(""+decimales(VAN));
        
        //Para la relacion beneficio costo
        for(int i=0;i<(periodos+1);i++){
            sumaB=(beneficios[i]/(Math.pow((1+interesM),(i))))+sumaB;
        }
        for(int i=0;i<(periodos+1);i++){
            sumaC=(costos[i]/(Math.pow((1+interesM),(i))))+sumaC;
        }
        BC=sumaB/sumaC;
        MBC.setText(""+decimales(BC));
        
        //PARA LA TIR
        double x=-1;
         tri=10;
        double sumatri=0;
         numero1=1;
        double sumaflujos1=0;
        for(int j=0;j<=periodos;j++){
            sumaflujos1=sumaflujos1+(numeros[j]);
        }
        if(sumaflujos1>0){
        for (int i = 0; i < 9; i++) {
                numero1=numero1/10;
                
                if (i%2==0) {
                    while(Math.abs(numero1)>0&x<=0){
                        for(int j=0;j<=periodos;j++){
                            sumatri=sumatri+(numeros[j]/Math.pow((1.0+tri), (double)j));
                        }
                        x=sumatri;
                        tri-=numero1;
                        sumatri=0;
                    }
                } else {
                    while(Math.abs(numero1)>0&x>=0){
                        for(int j=0;j<=periodos;j++){
                            sumatri=sumatri+(numeros[j]/Math.pow((1.0+tri), (double)j));
                        }
                        x=sumatri;
                        tri+=numero1;
                        sumatri=0;
                    }
                }
                
            }
        //si se quiere mas exacto a la variable i del for aumentale el valor y eso aproximara mas los decimales
        //envia el resultado
        jTextField2.setText(""+decimales(((tri+numero1)*100)));
        }else{
        jTextField2.setText("No es posible calcular la TIR");
        txtTIR.setText("La TIR no ha sido posible calcular por que la suma de flujos es menor a 0");
        }
            
        
        //para la PRI
        double sumaflujos=0,sumaflujosant=0,pri=0;
        double años, meses, dias;    
        for (int i = 0; i <=periodos; i++) {
            sumaflujos =sumaflujos+numeros[i];
            if(sumaflujos>=0&sumaflujos>numeros[0]){
                pri=i-1+(sumaflujosant/numeros[i]);
                años=(Math.floor(i-1));
                meses=Math.floor((pri-años)*12);
                dias=Math.floor(((((pri-años)*12)-meses)*30));
                APri.setText((int)años+" A - "+(int)meses+" M - "+(int)dias+" D (aprox.)");
                txtPRI.setText("Se recupera la inversion en: "+(int)años+" A - "+(int)meses+" M - "+(int)dias+" D (aprox.)");
                break;
            }else if(sumaflujos<0&i==periodos){
                if(i==1){
                    APri.setText("No se recupera la inversion en "+i+" año");
                    txtPRI.setText("No se recuperara la inversion inicial en "+i+" año");
                }else{
                    APri.setText("No se recupera la inversion en "+i+" años");
                    txtPRI.setText("No se recuperara la inversion inicial en "+i+" años");
                }
                
                
            }
            else{
                sumaflujosant=-sumaflujos;
            }
        }
        
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            Matriz,
            new String [] {
                "Periodos", "Beneficios", "Inversion", "Costos","Depreciacion", "C. Total","F.C. Neto", "Impuesto", "Depreciacion", "F.C. Economico", "Prestamo", "Interes Prest.", "Amort. Prest", "F.C. Financiero"
            }
        ){
        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return false;
        }
        });
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tablaFlujos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tablaFlujos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tablaFlujos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tablaFlujos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tablaFlujos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField APri;
    private javax.swing.JButton Ingresar;
    private javax.swing.JTextField MBC;
    private javax.swing.JTextField MCO;
    private javax.swing.JTextField MImpuesto;
    private javax.swing.JTextField MVan1;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel txtBC;
    private javax.swing.JSpinner txtDecimales;
    private javax.swing.JLabel txtEmp;
    private javax.swing.JButton txtLimpiar;
    private javax.swing.JLabel txtPRI;
    private javax.swing.JLabel txtTIR;
    private javax.swing.JLabel txtTipoperiodo;
    private javax.swing.JLabel txtVAN;
    // End of variables declaration//GEN-END:variables
}
